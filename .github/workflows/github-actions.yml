name: GitHub Actions
run-name: Testing code üöÄ
on: [push]
jobs:
  Python-format:
    runs-on: ubuntu-22.04
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10.12"
      - run: python3 --version
      - run: python3 -m venv venv
      - name: Format python files
        run: |
          . venv/bin/activate
          pip install -r requirements_dev.txt
          make black-check
          deactivate
      - run: echo "üçè This job's status is ${{ job.status }}."

  Python-lint:
    runs-on: ubuntu-22.04
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10.12"
      - run: python3 --version
      - run: python3 -m venv venv
      - name: Lint python files
        run: |
          . venv/bin/activate
          pip install -r requirements_dev.txt
          make pyflakes
          deactivate
      - run: echo "üçè This job's status is ${{ job.status }}."

  GLSL-format:
    runs-on: ubuntu-22.04
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10.12"
      - run: python3 --version
      - run: python3 -m venv venv
      - name: Lint python files
        run: |
          . venv/bin/activate
          pip install -r requirements_dev.txt
          make clang-format-check
          deactivate
      - run: echo "üçè This job's status is ${{ job.status }}."

  Google-Colaboratory-notebook-diff:
    runs-on: ubuntu-22.04
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10.12"
      - run: python3 --version
      - run: python3 -m venv venv
      - name: Diff notebook
        run: |
          . venv/bin/activate
          pip install -r requirements_dev.txt
          make notebook-check
          deactivate
      - run: echo "üçè This job's status is ${{ job.status }}."

  Visual-regression-test-on-Ubuntu:
    runs-on: ubuntu-22.04
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10.12"
      - run: python3 --version
      - run: python3 -m venv venv
      - name: Run pytest
        run: |
          sudo apt-get install libegl1 libturbojpeg
          . venv/bin/activate
          pip install -r requirements_dev.txt
          python -m moderngl
          pytest -s
          deactivate
      - run: echo "üçè This job's status is ${{ job.status }}."

  Visual-regression-test-on-Mac:
    runs-on: macos-12
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10.12"
      - run: python3 --version
      - run: python3 -m venv venv
      - name: Run pytest
        run: |
          . venv/bin/activate
          pip install -r requirements_dev.txt
          python -m moderngl
          pytest -s
          deactivate
      - run: echo "üçè This job's status is ${{ job.status }}."

  Visual-regression-test-on-Windows:
    runs-on: windows-2022
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.10.12
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          release: false
          install: >-
            mingw-w64-ucrt-x86_64-mesa
            mingw-w64-ucrt-x86_64-libjpeg-turbo
      - name: Add libturbojpeg to PATH
        run: echo "C:/msys64/ucrt64/bin/libturbojpeg.dll" >> $GITHUB_PATH
      - run: python --version
      - name: Run pytest
        run: |
          $env:GLCONTEXT_WIN_LIBGL = "C:/msys64/ucrt64/bin/opengl32.dll"
          $env:LIBGL_ALWAYS_SOFTWARE = "1"
          pip install -r requirements_dev.txt
          python -m moderngl
          pytest -s
      - run: echo "üçè This job's status is ${{ job.status }}."
